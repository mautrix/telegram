// Code generated by gotdgen, DO NOT EDIT.

package e2e

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"go.mau.fi/mautrix-telegram/pkg/gotd/bin"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tdjson"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tdp"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// DecryptedMessageLayer represents TL type `decryptedMessageLayer#1be31789`.
//
// See https://core.telegram.org/constructor/decryptedMessageLayer for reference.
type DecryptedMessageLayer struct {
	// RandomBytes field of DecryptedMessageLayer.
	RandomBytes []byte
	// Layer field of DecryptedMessageLayer.
	Layer int
	// InSeqNo field of DecryptedMessageLayer.
	InSeqNo int
	// OutSeqNo field of DecryptedMessageLayer.
	OutSeqNo int
	// Message field of DecryptedMessageLayer.
	Message DecryptedMessageClass
}

// DecryptedMessageLayerTypeID is TL type id of DecryptedMessageLayer.
const DecryptedMessageLayerTypeID = 0x1be31789

// Ensuring interfaces in compile-time for DecryptedMessageLayer.
var (
	_ bin.Encoder     = &DecryptedMessageLayer{}
	_ bin.Decoder     = &DecryptedMessageLayer{}
	_ bin.BareEncoder = &DecryptedMessageLayer{}
	_ bin.BareDecoder = &DecryptedMessageLayer{}
)

func (d *DecryptedMessageLayer) Zero() bool {
	if d == nil {
		return true
	}
	if !(d.RandomBytes == nil) {
		return false
	}
	if !(d.Layer == 0) {
		return false
	}
	if !(d.InSeqNo == 0) {
		return false
	}
	if !(d.OutSeqNo == 0) {
		return false
	}
	if !(d.Message == nil) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (d *DecryptedMessageLayer) String() string {
	if d == nil {
		return "DecryptedMessageLayer(nil)"
	}
	type Alias DecryptedMessageLayer
	return fmt.Sprintf("DecryptedMessageLayer%+v", Alias(*d))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*DecryptedMessageLayer) TypeID() uint32 {
	return DecryptedMessageLayerTypeID
}

// TypeName returns name of type in TL schema.
func (*DecryptedMessageLayer) TypeName() string {
	return "decryptedMessageLayer"
}

// TypeInfo returns info about TL type.
func (d *DecryptedMessageLayer) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "decryptedMessageLayer",
		ID:   DecryptedMessageLayerTypeID,
	}
	if d == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "RandomBytes",
			SchemaName: "random_bytes",
		},
		{
			Name:       "Layer",
			SchemaName: "layer",
		},
		{
			Name:       "InSeqNo",
			SchemaName: "in_seq_no",
		},
		{
			Name:       "OutSeqNo",
			SchemaName: "out_seq_no",
		},
		{
			Name:       "Message",
			SchemaName: "message",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (d *DecryptedMessageLayer) Encode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode decryptedMessageLayer#1be31789 as nil")
	}
	b.PutID(DecryptedMessageLayerTypeID)
	return d.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (d *DecryptedMessageLayer) EncodeBare(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode decryptedMessageLayer#1be31789 as nil")
	}
	b.PutBytes(d.RandomBytes)
	b.PutInt(d.Layer)
	b.PutInt(d.InSeqNo)
	b.PutInt(d.OutSeqNo)
	if d.Message == nil {
		return fmt.Errorf("unable to encode decryptedMessageLayer#1be31789: field message is nil")
	}
	if err := d.Message.Encode(b); err != nil {
		return fmt.Errorf("unable to encode decryptedMessageLayer#1be31789: field message: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (d *DecryptedMessageLayer) Decode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode decryptedMessageLayer#1be31789 to nil")
	}
	if err := b.ConsumeID(DecryptedMessageLayerTypeID); err != nil {
		return fmt.Errorf("unable to decode decryptedMessageLayer#1be31789: %w", err)
	}
	return d.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (d *DecryptedMessageLayer) DecodeBare(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode decryptedMessageLayer#1be31789 to nil")
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode decryptedMessageLayer#1be31789: field random_bytes: %w", err)
		}
		d.RandomBytes = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode decryptedMessageLayer#1be31789: field layer: %w", err)
		}
		d.Layer = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode decryptedMessageLayer#1be31789: field in_seq_no: %w", err)
		}
		d.InSeqNo = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode decryptedMessageLayer#1be31789: field out_seq_no: %w", err)
		}
		d.OutSeqNo = value
	}
	{
		value, err := DecodeDecryptedMessage(b)
		if err != nil {
			return fmt.Errorf("unable to decode decryptedMessageLayer#1be31789: field message: %w", err)
		}
		d.Message = value
	}
	return nil
}

// GetRandomBytes returns value of RandomBytes field.
func (d *DecryptedMessageLayer) GetRandomBytes() (value []byte) {
	if d == nil {
		return
	}
	return d.RandomBytes
}

// GetLayer returns value of Layer field.
func (d *DecryptedMessageLayer) GetLayer() (value int) {
	if d == nil {
		return
	}
	return d.Layer
}

// GetInSeqNo returns value of InSeqNo field.
func (d *DecryptedMessageLayer) GetInSeqNo() (value int) {
	if d == nil {
		return
	}
	return d.InSeqNo
}

// GetOutSeqNo returns value of OutSeqNo field.
func (d *DecryptedMessageLayer) GetOutSeqNo() (value int) {
	if d == nil {
		return
	}
	return d.OutSeqNo
}

// GetMessage returns value of Message field.
func (d *DecryptedMessageLayer) GetMessage() (value DecryptedMessageClass) {
	if d == nil {
		return
	}
	return d.Message
}
