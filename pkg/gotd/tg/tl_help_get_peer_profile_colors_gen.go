// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"go.mau.fi/mautrix-telegram/pkg/gotd/bin"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tdjson"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tdp"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// HelpGetPeerProfileColorsRequest represents TL type `help.getPeerProfileColors#abcfa9fd`.
// Get the set of accent color palettes »¹ that can be used in profile page backgrounds.
//
// Links:
//  1. https://core.telegram.org/api/colors
//
// See https://core.telegram.org/method/help.getPeerProfileColors for reference.
type HelpGetPeerProfileColorsRequest struct {
	// Hash used for caching, for more info click here¹.
	//
	// Links:
	//  1) https://core.telegram.org/api/offsets#hash-generation
	Hash int
}

// HelpGetPeerProfileColorsRequestTypeID is TL type id of HelpGetPeerProfileColorsRequest.
const HelpGetPeerProfileColorsRequestTypeID = 0xabcfa9fd

// Ensuring interfaces in compile-time for HelpGetPeerProfileColorsRequest.
var (
	_ bin.Encoder     = &HelpGetPeerProfileColorsRequest{}
	_ bin.Decoder     = &HelpGetPeerProfileColorsRequest{}
	_ bin.BareEncoder = &HelpGetPeerProfileColorsRequest{}
	_ bin.BareDecoder = &HelpGetPeerProfileColorsRequest{}
)

func (g *HelpGetPeerProfileColorsRequest) Zero() bool {
	if g == nil {
		return true
	}
	if !(g.Hash == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (g *HelpGetPeerProfileColorsRequest) String() string {
	if g == nil {
		return "HelpGetPeerProfileColorsRequest(nil)"
	}
	type Alias HelpGetPeerProfileColorsRequest
	return fmt.Sprintf("HelpGetPeerProfileColorsRequest%+v", Alias(*g))
}

// FillFrom fills HelpGetPeerProfileColorsRequest from given interface.
func (g *HelpGetPeerProfileColorsRequest) FillFrom(from interface {
	GetHash() (value int)
}) {
	g.Hash = from.GetHash()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*HelpGetPeerProfileColorsRequest) TypeID() uint32 {
	return HelpGetPeerProfileColorsRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*HelpGetPeerProfileColorsRequest) TypeName() string {
	return "help.getPeerProfileColors"
}

// TypeInfo returns info about TL type.
func (g *HelpGetPeerProfileColorsRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "help.getPeerProfileColors",
		ID:   HelpGetPeerProfileColorsRequestTypeID,
	}
	if g == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "Hash",
			SchemaName: "hash",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (g *HelpGetPeerProfileColorsRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode help.getPeerProfileColors#abcfa9fd as nil")
	}
	b.PutID(HelpGetPeerProfileColorsRequestTypeID)
	return g.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (g *HelpGetPeerProfileColorsRequest) EncodeBare(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode help.getPeerProfileColors#abcfa9fd as nil")
	}
	b.PutInt(g.Hash)
	return nil
}

// Decode implements bin.Decoder.
func (g *HelpGetPeerProfileColorsRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode help.getPeerProfileColors#abcfa9fd to nil")
	}
	if err := b.ConsumeID(HelpGetPeerProfileColorsRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode help.getPeerProfileColors#abcfa9fd: %w", err)
	}
	return g.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (g *HelpGetPeerProfileColorsRequest) DecodeBare(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode help.getPeerProfileColors#abcfa9fd to nil")
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode help.getPeerProfileColors#abcfa9fd: field hash: %w", err)
		}
		g.Hash = value
	}
	return nil
}

// GetHash returns value of Hash field.
func (g *HelpGetPeerProfileColorsRequest) GetHash() (value int) {
	if g == nil {
		return
	}
	return g.Hash
}

// HelpGetPeerProfileColors invokes method help.getPeerProfileColors#abcfa9fd returning error if any.
// Get the set of accent color palettes »¹ that can be used in profile page backgrounds.
//
// Links:
//  1. https://core.telegram.org/api/colors
//
// See https://core.telegram.org/method/help.getPeerProfileColors for reference.
func (c *Client) HelpGetPeerProfileColors(ctx context.Context, hash int) (HelpPeerColorsClass, error) {
	var result HelpPeerColorsBox

	request := &HelpGetPeerProfileColorsRequest{
		Hash: hash,
	}
	if err := c.rpc.Invoke(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.PeerColors, nil
}
