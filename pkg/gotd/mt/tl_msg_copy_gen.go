// Code generated by gotdgen, DO NOT EDIT.

package mt

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"go.mau.fi/mautrix-telegram/pkg/gotd/bin"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tdjson"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tdp"
	"go.mau.fi/mautrix-telegram/pkg/gotd/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// MsgCopy represents TL type `msg_copy#e06046b2`.
type MsgCopy struct {
	// OrigMessage field of MsgCopy.
	OrigMessage Message
}

// MsgCopyTypeID is TL type id of MsgCopy.
const MsgCopyTypeID = 0xe06046b2

// Ensuring interfaces in compile-time for MsgCopy.
var (
	_ bin.Encoder     = &MsgCopy{}
	_ bin.Decoder     = &MsgCopy{}
	_ bin.BareEncoder = &MsgCopy{}
	_ bin.BareDecoder = &MsgCopy{}
)

func (m *MsgCopy) Zero() bool {
	if m == nil {
		return true
	}
	if !(m.OrigMessage.Zero()) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (m *MsgCopy) String() string {
	if m == nil {
		return "MsgCopy(nil)"
	}
	type Alias MsgCopy
	return fmt.Sprintf("MsgCopy%+v", Alias(*m))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*MsgCopy) TypeID() uint32 {
	return MsgCopyTypeID
}

// TypeName returns name of type in TL schema.
func (*MsgCopy) TypeName() string {
	return "msg_copy"
}

// TypeInfo returns info about TL type.
func (m *MsgCopy) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "msg_copy",
		ID:   MsgCopyTypeID,
	}
	if m == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "OrigMessage",
			SchemaName: "orig_message",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (m *MsgCopy) Encode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't encode msg_copy#e06046b2 as nil")
	}
	b.PutID(MsgCopyTypeID)
	return m.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (m *MsgCopy) EncodeBare(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't encode msg_copy#e06046b2 as nil")
	}
	if err := m.OrigMessage.Encode(b); err != nil {
		return fmt.Errorf("unable to encode msg_copy#e06046b2: field orig_message: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (m *MsgCopy) Decode(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't decode msg_copy#e06046b2 to nil")
	}
	if err := b.ConsumeID(MsgCopyTypeID); err != nil {
		return fmt.Errorf("unable to decode msg_copy#e06046b2: %w", err)
	}
	return m.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (m *MsgCopy) DecodeBare(b *bin.Buffer) error {
	if m == nil {
		return fmt.Errorf("can't decode msg_copy#e06046b2 to nil")
	}
	{
		if err := m.OrigMessage.Decode(b); err != nil {
			return fmt.Errorf("unable to decode msg_copy#e06046b2: field orig_message: %w", err)
		}
	}
	return nil
}

// GetOrigMessage returns value of OrigMessage field.
func (m *MsgCopy) GetOrigMessage() (value Message) {
	if m == nil {
		return
	}
	return m.OrigMessage
}
