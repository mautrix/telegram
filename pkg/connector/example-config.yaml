# Get your own API keys at https://my.telegram.org/apps
app_id: 12345
app_hash: tjyd5yge35lbodk1xwzw2jstp90k55qz
# (Optional) Create your own bot at https://t.me/BotFather
bot_token: disabled

# Should the bridge request missed updates from Telegram when restarting?
catch_up: true
# Should incoming updates be handled sequentially to make sure order is preserved on Matrix?
sequential_updates: true
exit_on_update_error: false

# Telethon connection options.
connection:
    # The timeout in seconds to be used when connecting.
    timeout: 120
    # How many times the reconnection should retry, either on the initial connection or when
    # Telegram disconnects us. May be set to a negative or null value for infinite retries, but
    # this is not recommended, since the program can get stuck in an infinite loop.
    retries: 5
    # The delay in seconds to sleep between automatic reconnections.
    retry_delay: 1
    # The threshold below which the library should automatically sleep on flood wait errors
    # (inclusive). For instance, if a FloodWaitError for 17s occurs and flood_sleep_threshold
    # is 20s, the library will sleep automatically. If the error was for 21s, it would raise
    # the error instead. Values larger than a day (86400) will be changed to a day.
    flood_sleep_threshold: 60
    # How many times a request should be retried. Request are retried when Telegram is having
    # internal issues, when there is a FloodWaitError less than flood_sleep_threshold, or when
    # there's a migrate error. May take a negative or null value for infinite retries, but this
    # is not recommended, since some requests can always trigger a call fail (such as searching
    # for messages).
    request_retries: 5
    # Use IPv6 for Telethon connection
    use_ipv6: false

# Device info sent to Telegram.
device_info:
    # "auto" = OS name+version.
    device_model: mautrix-telegram
    # "auto" = Telethon version.
    system_version: auto
    # "auto" = mautrix-telegram version.
    app_version: auto
    lang_code: en
    system_lang_code: en

# Custom server to connect to.
server:
    # Set to true to use these server settings. If false, will automatically
    # use production server assigned by Telegram. Set to false in production.
    enabled: false
    # The DC ID to connect to.
    dc: 2
    # The IP to connect to.
    ip: 149.154.167.40
    # The port to connect to. 443 may not work, 80 is better and both are equally secure.
    port: 80

# Telethon proxy configuration.
# You must install PySocks from pip for proxies to work.
proxy:
    # Allowed types: disabled, socks4, socks5, http, mtproxy
    type: disabled
    # Proxy IP address and port.
    address: 127.0.0.1
    port: 1080
    # Whether or not to perform DNS resolving remotely. Only for socks/http proxies.
    rdns: true
    # Proxy authentication (optional). Put MTProxy secret in password field.
    username: ""
    password: ""
